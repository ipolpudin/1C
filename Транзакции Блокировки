// Рекомендуется использовать открытие пакета транзакции, так как запись в SQL будет происходить пакетом за один раз.
// Например: можно сделать запись справочника, затем РС, затем документа - будет 3 транзакции, 3 обращения к серверу на запись.
// Или объеденить запись справочника, РС, документа в одну транзакцию - будет 1 транзакция, 1 обращения к серверу на запись.

Заказ.Записать(); - Запись происходит в транзакции

Методы формирования транзакций:
1) Запись единичной транзакции
Заказ.Записать(); - первая транзакция
Приобретение.Записать(); - вторая транзакция

2) Открытие пакета транзакции(объединение нескольких транзакций в одну)
Процедура ЗаписатьДанныеВИБ()

    НачатьТранзакцию();

    Попытка
        ... // все происходит в рамках одной транзакции
        ДокументОбъект.Записать() все происходит в рамках одной транзакции
        ЗафиксироватьТранзакцию(); все происходит в рамках одной транзакции
    Исключение
        ОтменитьТранзакцию();
        ... // дополнительные действия по обработке исключения
    КонецПопытки;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                
                                                                                                                        Транзацкии

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                Явная
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Описывается вручную

НачатьТранзакцию();

Попытка
      ... // все происходит в рамках одной транзакции
        ДокументОбъект.Записать() все происходит в рамках одной транзакции
        ЗафиксироватьТранзакцию(); все происходит в рамках одной транзакции
    Исключение
        ОтменитьТранзакцию();
        ... // дополнительные действия по обработке исключения
КонецПопытки;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                               Неявная
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Создается при создании элемента через пользовательский режим (в событиях перед записью и т.д.)
При работе через встроенный язык Объект.Записать()
При чтении данных. Для разных SQL и читаемых объектов по разному

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                
                                                                                                                    Чтение

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
В открытых транзакциях читаются только данные не заблокированные данные, заблокированные с режимом блокировки распределенной, измененный данные с зафиксированной транзакцией (при вызове функции Записать() накладывается исключительная блокировка) 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                               Грязное чтение
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Чтение вне транзакций и блокировок, может читать измененные объекты в незафиксированных транзакциях (ЗафиксироватьТранзакцию())

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                               Ответственное чтение
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                
                                                                                                                    Практические правила

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

При обмене: 
Все изменение и создания делать в одной транзакции

1) Обычный поиск по ключам или идентификатору выполнять вне транзакций и блокировок (если нет эффекта чтения из незафиксированных транзакций).

2) Получение реквизитов найденного элемента.
Если изменении реквизита у найденного объекта окажет влияние на создаваемый документ.
Нужно ответить на вопрос: 
Что будет если изменить этот реквизит после создания документа?
Если ли здесь вероятность прочитать половину актуальных и половину устаревших данных например у документа изменились реквизиты, а записи РС еще нет?
При необходимости включить Ответственное чтение.

3) Чтение дочернего элемента и/или изменение/созданию по условию 
Чтение осуществлять по логике из пунктов 1 и 2. 
При выявлении использования распределенной блокировки и дальнейшем изменение элемента снимать распределенную блокировки и стравить исключительную с дальнейшей проверкой (избегание взаимоблокировок). Особое внимание на  "Что если обмен в фоне и происходит создание одинаковых дочерних элементов в разных фоновых заданиях"

4) Создание основных элементов и дочерних. 
Решение проблемы "Что если обмен в фоне и происходит создание одинаковых дочерних элементов в разных фоновых заданиях":
4.1)  Один поток создает один элемент. Одинаковые потоки происходят последовательно
4.2)  Один поток создает много элементов. Все потоки происходят последовательно

Что может быть если не пользоваться транзакциями и блокировками
1) Читать незафиксированные транзакции (в разных СУБД по разному)
2) Читать изменяемые данные
3) Читать половину актуальных половину устаревший данных (документ и РС)
4) Создание в разных фоновых заданиях одинаковых элементов (искали по инн, не нашли и создали элемент), но эти действия произошли в двух фоновых заданиях
