//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                         //РегистрСведений
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
НаборЗаписи - Изменить и Создать
МенеджерЗаписи - только Создает

Типы таблиц в БД:
1) таблица движений РС
2) таблица итогов на СрезПервых и СрезПоследних, только при включении галочки
3) таблица регистрации изменений, если РС участвует хотя бы в одном плане обмена
4) настройка хранения итогов РС

///////////////////////////////////////////////////////////////////////
			галочка Ведущее
///////////////////////////////////////////////////////////////////////
У измерения РС есть свойство ведущее
У справочников, документов и т.д. на форме появляется закладка с РС, можно перейти и посмотреть записи с участием этого объекта  

///////////////////////////////////////////////////////////////////////
		Записать(Ложь) или Записать(Истина)
///////////////////////////////////////////////////////////////////////
НаборЗаписейРегистра.Записать(Ложь)// ложь - свойство перезаписать гранулу отбора
Для того чтобы добавить записи к существующим записям по выбранной грануле отбора, необходимо указывать значение Ложь параметра метода Записать(Ложь) набора записей.
Если будут дублируещиеся записи будет вызвано предупреждение пользователю и запись не произойдет

НаборЗаписейРегистра.Записать(Истина)// По умолчанию стоит Истина
По умолчанию запись выполняется с замещением, т. е. существующие записи этого регистратора в регистре сведений будут удалены.
Если стоит Истина то перезапишется регистр по выбранной грануле отбора

///////////////////////////////////////////////////////////////////////
		Запись гранулы отбора (перезапись регистра)
///////////////////////////////////////////////////////////////////////
//Гранула Отбора 
НаборЗаписейРегистра.Отбор.Период.Установить(Параметры.ДатаЗаписиРегистра); 
НаборЗаписейРегистра.Отбор.Подразделение.Установить(Параметры.ВедущийОбъект);
//Все запись РС попадающие в такой отбор будут удалены и добавятся новые записи из НаборЗаписейРегистра, если .Записать(Истина) 

///////////////////////////////////////////////////////////////////////
		Запись в РС через ТаблизуЗначений
///////////////////////////////////////////////////////////////////////

Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.эккоИдентификаторSAPHRПозицииШРРуководителя КАК Идентификатор,
	|	ПодразделенияОрганизаций.ДатаСоздания КАК Период,
	|	ПодразделенияОрганизаций.Ссылка КАК Подразделение
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.эккоИдентификаторSAPHRПозицииШРРуководителя <> """"";
	Результат = Запрос.Выполнить();
	
	таб = Результат.Выгрузить();	
	
	НаборЗаписей = РегистрыСведений.эккоИсторияИзмененияSapHR.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(таб);
	НаборЗаписей.Записать();// Произойдет перезапись всего регистра

///////////////////////////////////////////////////////////////////////
		Запись в РС стандартно
///////////////////////////////////////////////////////////////////////
 	//Записывает новые записи в Регистр Сведений
	
	&НаСервере
	НаборЗаписейРегистра = РегистрыСведений.эккоИсторияИзмененияSapHR.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Период.Установить(Параметры.ДатаЗаписиРегистра); 
	НаборЗаписейРегистра.Отбор.Подразделение.Установить(Параметры.ВедущийОбъект);

	НаборЗаписейРегистра = НаборЗаписей.Добавить();
	НаборЗаписейРегистра.Период = Параметры.ДатаЗаписиРегистра;
	НаборЗаписейРегистра.Подразделение = Параметры.ВедущийОбъект;
	
	НаборЗаписейРегистра.Записать(Ложь)// ложь - свойство перезаписать элемент
	/////////////////////////////////////////////////////////////////

	НаборЗаписейРегистра = РегистрыСведений.эккоИсторияИзмененияSapHR.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Регистратор.Установить(Параметры.ДатаЗаписиРегистра); 

	Для Каждого ... Из ... Цикл
		ЗаполнитьЗначенияСвойств(НаборЗаписейРегистра.Добавить(), ЗаписьНабора);
	КонецЦикла; 
	
	НаборЗаписейРегистра.Записать(Ложь);
	НаборЗаписейРегистра.Очистить();// Если цикл заполнения для нескольких измерений 
  
///////////////////////////////////////////////////////////////////////
			Поиск в РС 
///////////////////////////////////////////////////////////////////////

//////////////////////////////
	1 способ
//////////////////////////////
	//ВыборкаЗаписи - содержит записи удовлетворяющие отбор
	&НаСервере
        СтруктураОтбора = Новый Структура; 
	СтруктураОтбора.Вставить("Подразделение", Подразделение);
	
	ВыборкаЗаписи = РегистрыСведений.эккоИсторияИзмененияSapHR.Выбрать(ДатаЭлемента, ДатаЭлемента,СтруктураОтбора);
	
	Пока ВыборкаЗаписи.Следующий() Цикл
	КонецЦикла;
		
	Если НЕ ВыборкаЗаписи.Следующий() Тогда
	КонецЕсли;
		
//////////////////////////////
	2 способ
//////////////////////////////	
	//Находит последннюю актуальную запись в Регистре Сведений в Виде ТЗ
	&НаСервере
	Запись = РегистрыСведений.эккоИсторияИзмененияSapHR.СрезПоследних(Дата,СтруктураОтбора);
	
//////////////////////////////
	3 способ
//////////////////////////////
	//Находит последннюю актуальную запись в Регистре Сведений в Виде ТЗ. Возвращает только Ресурсы
	
	&НаСервере
	Запись = РегистрыСведений.эккоИсторияИзмененияSapHR.ПолучитьПоследнее(Дата,СтруктураОтбора);
	
///////////////////////////////////////////////////////////////////////
			Удаление записей РС 
///////////////////////////////////////////////////////////////////////	
	//Удаление записей по выбранной грануле(отбору)
	
	НаборЗаписейРегистра = РегистрыСведений.эккоИсторияИзмененияSapHRПозицииРуководителя.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Подразделение.Установить(Объект.Ссылка);
	НаборЗаписейРегистра.Записать();

///////////////////////////////////////////////////////////////////////
		 Переодичность - подчинен регистратору
///////////////////////////////////////////////////////////////////////
Записи с одинаковыми измерениями и одинаковым переодом не будут конфликтовать, потому что регистратор тоже стал измерением. В реальных задачах малоприменимо. 
Например, нельзя понять уволен сотрудник или принят если запись была в одну и туже секунду  

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                         //РегистрНакоплений
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Есть 2 физические таблицы: Движений и Таблицы Итогов(остатков)
Есть таблица итогов у остатков, переодичность сохраниния зависит от параметра "Переодичность". Есть нюанс если дата запроса к таблице остатков актуальнее чем физическая, то она будет досчитывать до нужной даты
У таблицы Обороды вычисление на необходимую дату происходит подсчетом всей таблицы

///////////////////////////////////////////////////////////////////////
			Виртуальные таблицы 
///////////////////////////////////////////////////////////////////////	

//////////////////////////////
	Особенности
//////////////////////////////
Последняя секуда у остатков не вкл.
Последняя секунда у оборотов вкл.


