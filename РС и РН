//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                         //РегистрСведений
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
НаборЗаписи - Изменить и Создать (Факт ставиться под сомнения)
МенеджерЗаписи - только Создает (Факт ставиться под сомнения)

Типы таблиц в БД:
1) таблица движений РС
2) таблица итогов на СрезПервых и СрезПоследних, только при включении галочки
3) таблица регистрации изменений, если РС участвует хотя бы в одном плане обмена
4) настройка хранения итогов РС

///////////////////////////////////////////////////////////////////////
			галочка Ведущее
///////////////////////////////////////////////////////////////////////
У измерения РС есть свойство ведущее
У справочников, документов и т.д. на форме появляется закладка с РС, можно перейти и посмотреть записи с участием этого объекта  

///////////////////////////////////////////////////////////////////////
		Записать(Ложь) или Записать(Истина)
///////////////////////////////////////////////////////////////////////
НаборЗаписейРегистра.Записать(Ложь)// ложь - свойство перезаписать гранулу отбора
Для того чтобы добавить записи к существующим записям по выбранной грануле отбора, необходимо указывать значение Ложь параметра метода Записать(Ложь) набора записей.
Если будут дублируещиеся записи будет вызвано предупреждение пользователю и запись не произойдет

НаборЗаписейРегистра.Записать(Истина)// По умолчанию стоит Истина
По умолчанию запись выполняется с замещением, т. е. существующие записи этого регистратора в регистре сведений будут удалены.
Если стоит Истина то перезапишется регистр по выбранной грануле отбора

///////////////////////////
Для платнформ выше 8.3.27

РежимЗамещения.Удаление

///////////////////////////////////////////////////////////////////////
		Запись гранулы отбора (перезапись регистра)
///////////////////////////////////////////////////////////////////////
Гранула Отбора 

НаборЗаписейРегистра.Отбор.Период.Установить(Параметры.ДатаЗаписиРегистра); 
НаборЗаписейРегистра.Отбор.Подразделение.Установить(Параметры.ВедущийОбъект);
Все запись РС попадающие в такой отбор будут удалены и добавятся новые записи из НаборЗаписейРегистра, если .Записать(Истина) 

///////////////////////////////////////////////////////////////////////
		Запись в РС через ТаблизуЗначений
///////////////////////////////////////////////////////////////////////

///////////////////////////
Для платнформ выше 8.3.27

    ПорцияЗначенийИзмерений = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
    ПолноеИмяРегистра = Метаданные.РегистрыСведений.ДанныеБизнесПроцессов.ПолноеИмя();
    
    Блокировка = Новый БлокировкаДанных;
    ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
    ЭлементБлокировки.ИсточникДанных = ПорцияЗначенийИзмерений;
    ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Владелец", "Владелец");
    
    Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("ПорцияЗначенийИзмерений", ПорцияЗначенийИзмерений);
    Запрос.Текст =
    "ВЫБРАТЬ
    |    *,
    |    ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен) КАК Состояние
    |ИЗ
    |    РегистрСведений.ДанныеБизнесПроцессов КАК ДанныеБизнесПроцессов
    |ГДЕ
    |    ДанныеБизнесПроцессов.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.ПустаяСсылка)
    |    И (ДанныеБизнесПроцессов.Владелец) В (&ПорцияЗначенийИзмерений)";
    
    НачатьТранзакцию();
    Попытка
        БлокировкаДанных.Заблокировать();
        Выгрузка = Запрос.Выполнить().Выгрузить();
        НаборЗаписей = РегистрыСведений.ДанныеБизнесПроцессов.СоздатьНаборЗаписей();
        НаборЗаписей.Загрузить(Выгрузка);
        ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, РежимЗамещения.Обновление);
        ЗафиксироватьТранзакцию();
    Исключение
        ОтменитьТранзакцию();
        ...
    КонецПопытки;

///////////////////////////
Для платнформ ниже 8.3.27
        
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодразделенияОрганизаций.эккоИдентификаторSAPHRПозицииШРРуководителя КАК Идентификатор,
	|	ПодразделенияОрганизаций.ДатаСоздания КАК Период,
	|	ПодразделенияОрганизаций.Ссылка КАК Подразделение
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.эккоИдентификаторSAPHRПозицииШРРуководителя <> """"";
	Результат = Запрос.Выполнить();
	
	таб = Результат.Выгрузить();	
	
	НаборЗаписей = РегистрыСведений.эккоИсторияИзмененияSapHR.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(таб);
	НаборЗаписей.Записать();// Произойдет перезапись всего регистра

///////////////////////////////////////////////////////////////////////
		Запись в РС стандартно
///////////////////////////////////////////////////////////////////////
 	//Записывает новые записи в Регистр Сведений

//////////////////////////////
	1 способ Набор записей
//////////////////////////////

	&НаСервере
	НаборЗаписейРегистра = РегистрыСведений.эккоИсторияИзмененияSapHR.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Период.Установить(Параметры.ДатаЗаписиРегистра); 
	НаборЗаписейРегистра.Отбор.Подразделение.Установить(Параметры.ВедущийОбъект);

	НаборЗаписейРегистра = НаборЗаписей.Добавить();
	НаборЗаписейРегистра.Период = Параметры.ДатаЗаписиРегистра;
	НаборЗаписейРегистра.Подразделение = Параметры.ВедущийОбъект;
	
	НаборЗаписейРегистра.Записать(Ложь)

	/////////////////////////////////////////////////////////////////

	///////////////////////////
	Для платнформ выше 8.3.27

	Блокировка = Новый БлокировкаДанных();
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПользовательскиеНастройки");
	ЭлементБлокировки.УстановитьЗначение("Пользователь", ПользовательСсылка);

	НачатьТранзакцию();
	Попытка
	    Блокировка.Заблокировать();
	    
	    УдаляемыеЗаписи = РегистрыСведений.ПользовательскиеНастройки.СоздатьНаборЗаписей();
	    Для Каждого ЗначениеНастройки Из Настройки Цикл
	        УдаляемаяЗапись = УдаляемыеЗаписи.Добавить();
	        УдаляемаяЗапись.ИдентификаторКоманды = ЗначениеНастройки.ИдентификаторКоманды;
	        УдаляемаяЗапись.Пользователь = ПользовательСсылка;
	    КонецЦикла;
	    
	    УдаляемыеЗаписи.Записать(РежимЗамещения.Удаление);
	    ЗафиксироватьТранзакцию();

	Исключение
	    ОтменитьТранзакцию();
	    ВызватьИсключение;
	КонецПопытки

	///////////////////////////
	Для платнформ ниже 8.3.27

	НаборЗаписейРегистра = РегистрыСведений.эккоИсторияИзмененияSapHR.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Регистратор.Установить(Параметры.ДатаЗаписиРегистра); 

	Для Каждого ... Из ... Цикл
		ЗаполнитьЗначенияСвойств(НаборЗаписейРегистра.Добавить(), ЗаписьНабора);
	КонецЦикла; 
	
	НаборЗаписейРегистра.Записать(Ложь);
	НаборЗаписейРегистра.Очистить();// Если цикл заполнения для нескольких измерений 

//////////////////////////////
	2 способ Менеджер записей
//////////////////////////////

Если не устанавливать значения отбора измерения, то будут использовано пустые значения (ПустаяСсылка или Неопределено).
Например необходимо отобрать все Скады = "НужныйСклад", и не важно какой адрес склада (адрес склада тоже измерение), 
При не установленном значении адреса склада не выведуться записи с Скады = "НужныйСклад" и адрес склада = "УлицаСкладская"

Процедура НоваяЗапись(ДокументСсылка) Экспорт

	// Ставить исключительную блокировку по наборам записей

	МенеджерЗаписи = РегистрыСведений.бит_ОтложенноеПроведениеДокументов.СоздатьМенеджерЗаписи(); 
	МенеджерЗаписи.Документ = ДокументСсылка;
	МенеджерЗаписи.Прочитать();// Использовать только совместно с управляемой блокировкой, иначе дедлок
	
	Если НЕ МенеджерЗаписи.Выбран() Тогда // Использовать только совместно с управляемой блокировкой, иначе дедлок       
		
		МенеджерЗаписи.Документ = ДокументСсылка;
		МенеджерЗаписи.Записать();               
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
		Удаление Записи в РС
///////////////////////////////////////////////////////////////////////

//////////////////////////////
	1 способ Набор записей
//////////////////////////////
В этом примере мы создаем набор записей, устанавливаем для него отбор по измерениям, но записи в набор не добавляем. 
В результате при записи набора будет выполнена очистка записей по валютам, установленным в качестве отбора

Процедура ОчиститьЗаписиВНезависимомРегистреСведенийСОтбором(Валюта, БазоваяВалюта)
	Набор = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
	Набор.Отбор.Валюта.Установить(Валюта);
	Набор.Отбор.БазоваяВалюта.Установить(Валюта);
	Набор.Записать();
КонецПроцедуры

Процедура УдалитьЗапись(ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.бит_ОтложенноеПроведениеДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(ДокументСсылка);
	НаборЗаписей.Прочитать();// Использовать только совместно с управляемой блокировкой, иначе дедлок
	
	Если НаборЗаписей.Количество() > 0 Тогда// Использовать только совместно с управляемой блокировкой, иначе дедлок
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

//////////////////////////////
	2 способ Менеджер записей
//////////////////////////////
При использовании второго варианта платформа будет конвертировать менеджер записи в набор записей

Процедура ОчиститьЗаписиВНезависимомРегистреСведенийСОтбором(Валюта, БазоваяВалюта)
	Запись = РегистрыСведений.КурсыВалют.СоздатьМенеджерЗаписи();
	Запись.Валюта = Валюта;
	Запись.БазоваяВалюта = БазоваяВалюта;
	Запись.Удалить();
КонецПроцедуры

///////////////////////////////////////////////////////////////////////
			Прочитать()
///////////////////////////////////////////////////////////////////////
МенеджерЗаписи.Прочитать()
Если не найдена гранила, то отборы будут равны Неопределено

МенеджерЗаписи = РегистрыСведений.бит_ОтложенноеПроведениеДокументов.СоздатьМенеджерЗаписи(); 
МенеджерЗаписи.Документ = ДокументСсылка;
МенеджерЗаписи.Прочитать();// Использовать только совместно с управляемой блокировкой, иначе дедлок
	
Если НЕ МенеджерЗаписи.Выбран() Тогда// По отбору нет записей в РС        
		
	МенеджерЗаписи.Документ = ДокументСсылка;// Необходимо повторно заполнить измерение 
	МенеджерЗаписи.Записать();               
		
КонецЕсли;

///////////////////////////////////////////////////////////////////////
			Поиск в РС 
///////////////////////////////////////////////////////////////////////

//////////////////////////////
	1 способ
//////////////////////////////
	//ВыборкаЗаписи - содержит записи удовлетворяющие отбор
	&НаСервере
        СтруктураОтбора = Новый Структура; 
	СтруктураОтбора.Вставить("Подразделение", Подразделение);
	
	ВыборкаЗаписи = РегистрыСведений.эккоИсторияИзмененияSapHR.Выбрать(ДатаЭлемента, ДатаЭлемента,СтруктураОтбора);
	
	Пока ВыборкаЗаписи.Следующий() Цикл
	КонецЦикла;
		
	Если НЕ ВыборкаЗаписи.Следующий() Тогда
	КонецЕсли;
		
//////////////////////////////
	2 способ
//////////////////////////////	
	//Находит последннюю актуальную запись в Регистре Сведений в Виде ТЗ
	&НаСервере
	Запись = РегистрыСведений.эккоИсторияИзмененияSapHR.СрезПоследних(Дата,СтруктураОтбора);
	
//////////////////////////////
	3 способ
//////////////////////////////
	//Находит последннюю актуальную запись в Регистре Сведений в Виде ТЗ. Возвращает только Ресурсы
	
	&НаСервере
	Запись = РегистрыСведений.эккоИсторияИзмененияSapHR.ПолучитьПоследнее(Дата,СтруктураОтбора);
	
///////////////////////////////////////////////////////////////////////
			Удаление записей РС 
///////////////////////////////////////////////////////////////////////	
	//Удаление записей по выбранной грануле(отбору)
	
	НаборЗаписейРегистра = РегистрыСведений.эккоИсторияИзмененияSapHRПозицииРуководителя.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Подразделение.Установить(Объект.Ссылка);
	НаборЗаписейРегистра.Записать();

///////////////////////////////////////////////////////////////////////
		 Переодичность - подчинен регистратору
///////////////////////////////////////////////////////////////////////
Записи с одинаковыми измерениями и одинаковым переодом не будут конфликтовать, потому что регистратор тоже стал измерением. В реальных задачах малоприменимо. 
Например, нельзя понять уволен сотрудник или принят если запись была в одну и туже секунду  

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                         //РегистрНакоплений
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Есть 2 физические таблицы: Движений и Таблицы Итогов(остатков)
Есть таблица итогов у остатков, переодичность сохраниния зависит от параметра "Переодичность". Есть нюанс если дата запроса к таблице остатков актуальнее чем физическая, то она будет досчитывать до нужной даты
У таблицы Обороды вычисление на необходимую дату происходит подсчетом всей таблицы

///////////////////////////////////////////////////////////////////////
			Виртуальные таблицы 
///////////////////////////////////////////////////////////////////////	

//////////////////////////////
	Особенности
//////////////////////////////
Последняя секуда у остатков не вкл.
Последняя секунда у оборотов вкл.


