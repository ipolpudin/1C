////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                 СправочнаяИнформация
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Вкладная Наборы Данных:
1) Тип Значения. Например: Если в запросе указан отбор регистратора по определенному документу и в поле Тип Значения указан тип этого документа. 
-> ТО при установлении отбора в пользователь режиме будет отображаться отбор по конкретным записям из этого Докумета
2) Доступные Значения. Для поля определяется список доступных значений из предопределяемых объектов или программным способом любые объекты 
3) СтандартныйПериод приводит ДатуОкончания к 23:59:59
4) Роль необходим для правильного расчета итогов, актуально для измерений Даты. Например Год Роль = Период, 12, ДОП; Неделя = Период, 7, ДОП 
5) Ресурсы необходимы для подсчета итогов. Есть возможность редактировать Выражение в свободной форме и использовать имена других ресурсов.
6) При расчете остатков необходимо обязательно добавлять два антогониста "НачальныйОстаток" и "КонечныйОстаток"
7) Оформление будет относитсься ко всем Группировкам, в отличии от УсловногоОформления
8) Выражение Представлении можно сделать представление поля как "ИмяТовара" + "Артикур"
9) ВыражениеУпорядочивания выстраивает логику упорядочивания
10) Есть возможность выбирать начало и др. вариации даты в "Выбранные Поля", что бы рализовывать без программирования
11) Заголовок Поля или Ресурса можно менять с помощью "Выбранные Поля" -> УстановитьЗаголовок
12) Нумерация и уровень иерархии можно выводить в СКД "Настройки" -> "Выбранные Поля" -> "Системные Поля" -> "Номер"
13) Условное оформление позволяет задать: Формат для поля и место где будет использоваться формат, а так же условие когда формат будет использоваться 
14) Можно подменять одну строку другой с использованием "Условное Оформления" -> "Текст". Можно заменить на другое поле или просто на строку
15) Дополнительная Информация выводится в самом конце
16) Вкл/Выкл Функциональных опций учитывается в СКД 
17) Параметры "Функциональных Опций" учитывается в СКД "Параметры" -> "Параметры функциональных опций" Часть1 Урок8 43
18) Соединение через СКД(СвязиНаборовДанных) работает медленнее

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                 Напоминание
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
                	Вывод дней последовательно
////////////////////////////////////////////////////////////////
//Вывод всех дней в отчет от ДатыНачала до ДатыОкончания не зависимо имеются записи или нет

Пункты: 
1) На вкладне "Настройки" создается ДетальнаяЗапись с полем Период(Например из РегистрСведений)
2) Двойным нажатием на эту ДетальнуюЗапись переходим в диалоговое окно и нажимаем "Тип Дополнения"
3) Выбираем необходимые поля ДатуНачала и ДатуОкончания 

////////////////////////////////////////////////////////////////
                	Програмное открытие отчета
////////////////////////////////////////////////////////////////
ПараметрыФорма = Новый Структура;
ПараметрыФорма.Вставить("СформироватьПриОткрытии", Истина);// Сразу запускает формирование отчета при открытии формы

СтруктураОтбора = Новый Структура;
СтруктураОтбора.Вставить("Контрагент", Объект.Ссылка);

ПараметрыФорма.Вставить("Отбор", СтруктураОтбора);// Добавление отбора
ПараметрыФорма.Вставить("КлючВарианта", "ВторойВариантОтчета");// Выбор варианта отчета

ОткрытьФорму("Отчет.НашОтчет.Форма", ПараметрыФормы);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                 Заполнение
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Отчет с переопредилением Макета
//Заолняет и выводит Макет в Отчет

//https://disk.yandex.ru/d/uCZAKOzIhaDSDA Отчет как Печатка, 2 МАКЕТА на выбор(sfxРешениеКомиссиПоУстановлениюНепрерывногоСтажаПоЧАЭС)
//ПриКомпановнеРезультата(ДокументРезультат) -> процедура Сформировать(ДокументРезультат) -> процедура печати(ДокументРезультат). ТабДок = ДокументРезультат -> ...Заполнение... -> ТабДок.Вывести()

// Выводит в табличный документ области макета с заполненными параметрами коллекций данных.
//
//{СофтЭксперт Полпудин И.С Дата: 07/06/2023
//ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета() взята за основу.
//Добавлена проверка на вывод области и вывод ГоризонтальныйРазделительСтраниц
//
// Параметры:
//		ДокументРезультат	- ТабличныйДокумент
//		Макет				- ТабличныйДокумент
//		ИменаОбластейМакета	- Строка, имена областей макета, перечисленные через запятую
//		Данные, ... Данные9	-Структура, Неопределено содержат значения параметров областей, выводимого макета.
//
Процедура ВывестиВДокументРезультатОбластиМакета(ДокументРезультат, Макет, ИменаОбластейМакета, Данные, 
	Данные1 = Неопределено, Данные2 = Неопределено, Данные3 = Неопределено, Данные4 = Неопределено, 
	Данные5 = Неопределено, Данные6 = Неопределено, Данные7 = Неопределено, Данные8 = Неопределено, 
	Данные9 = Неопределено) Экспорт
	
	
	//{СофтЭксперт Полпудин И.С Дата: 07/06/2023
	//Массив для проверки вместимости ТД
	МассивОбластейДляПроверкиВывода = Новый Массив;
	//}СофтЭксперт Полпудин И.С Дата: 07/06/2023
	
	ИменаОбластей = СтрРазделить(ИменаОбластейМакета, ",");
	Для Каждого ИмяОбласти Из ИменаОбластей Цикл
		
		Область = Макет.ПолучитьОбласть(ИмяОбласти);
		ЗаполнитьПараметрыОбластиМакета(Область, Данные, 
		Данные1, Данные2, Данные3, Данные4, 
		Данные5, Данные6, Данные7, Данные8, 
		Данные9);
		
		//{СофтЭксперт Полпудин И.С Дата: 07/06/2023
		МассивОбластейДляПроверкиВывода.Очистить();
		МассивОбластейДляПроверкиВывода.Добавить(Область);
		
		Если НЕ ДокументРезультат.ПроверитьВывод(МассивОбластейДляПроверкиВывода) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(Область);
		Иначе
			ДокументРезультат.Вывести(Область);
		КонецЕсли; 
		//}СофтЭксперт Полпудин И.С Дата: 07/06/2023
		
		
	КонецЦикла;
	
КонецПроцедуры



/////////////////////////////////////////////////////////////////////////////////////////
//Заполняет область макета

// Заполняет параметры области табличного документа.
//
// Параметры:
//		Область				- ОбластьЯчеекТабличногоДокумента
//		Данные, ... Данные9	-Структура, Неопределено содержат значения параметров областей, выводимого макета.
//
Процедура ЗаполнитьПараметрыОбластиМакета(Область, Данные, 
	Данные1 = Неопределено, Данные2 = Неопределено, Данные3 = Неопределено, Данные4 = Неопределено, 
	Данные5 = Неопределено, Данные6 = Неопределено, Данные7 = Неопределено, Данные8 = Неопределено, 
	Данные9 = Неопределено) Экспорт
	
	Область.Параметры.Заполнить(Данные);
	
	Если Данные1 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные1);
	КонецЕсли;
	
	Если Данные2 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные2);
	КонецЕсли;
	
	Если Данные3 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные3);
	КонецЕсли;
	
	Если Данные4 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные4);
	КонецЕсли;
	
	Если Данные5 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные5);
	КонецЕсли;
	
	Если Данные6 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные6);
	КонецЕсли;
	
	Если Данные7 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные7);
	КонецЕсли;
	
	Если Данные8 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные8);
	КонецЕсли;
	
	Если Данные9 <> Неопределено Тогда
		Область.Параметры.Заполнить(Данные9);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Компоновка Макета ПечатнойФормы

//Выполняет запрос из СКД
//Инициализирует Макет в Отчет


ЗарплатаКадрыОтчеты.РезультатКомпоновкиМакетаПечатнойФормы(ОбъектОтчета, ДанныеРасшифровки = Неопределено, 
	НастройкиОтчета = Неопределено, ВнешниеНаборыДанных = Неопределено, ДополнительныеПараметры = Неопределено)
 
 /////////////////////////////////////////////////////////////////////////////////////////
 //Доработана для работы с ВнешнимОтчетом
  
 // Функция - Результат компоновки макета печатной формы
//
//{СофтЭксперт Полпудин И.С Дата: 07/06/2023
//ЗарплатаКадрыОтчеты.РезультатКомпоновкиМакетаПечатнойФормы взята за основу и доработана для работы с ВнешнимОтчетом
//
// Параметры:
//  ОбъектОтчета			 - 	 - 
//  ДанныеРасшифровки		 - 	 - 
//  НастройкиОтчета			 - 	 - 
//  ВнешниеНаборыДанных		 - 	 - 
//  ДополнительныеПараметры	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция РезультатКомпоновкиМакетаПечатнойФормы(ОбъектОтчета, ДанныеРасшифровки = Неопределено, 
	НастройкиОтчета = Неопределено, ВнешниеНаборыДанных = Неопределено, ДополнительныеПараметры = Неопределено) 
	
	РезультатКомпоновкиМакета = Новый Структура;
	
	// Заполняется коллекция идентификаторов пользовательских полей
	Если НастройкиОтчета = Неопределено Тогда
		НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	КонецЕсли;
	
	ДопСвойства = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
	
	Если ДополнительныеПараметры <> Неопределено Тогда
		
		Если ДополнительныеПараметры.Свойство("Отбор") Тогда
			
			Для Каждого ОписаниеОтбора Из ДополнительныеПараметры.Отбор Цикл
				
				ЭлементОтбора = НастройкиОтчета.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				
				ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ОписаниеОтбора.ЛевоеЗначение);
				ЭлементОтбора.ПравоеЗначение = ОписаниеОтбора.ПравоеЗначение;
				ЭлементОтбора.ВидСравнения = ОписаниеОтбора.ВидСравнения;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ДополнительныеПараметры.Свойство("КлючВарианта") Тогда
			РезультатКомпоновкиМакета.Вставить("КлючВарианта", ДополнительныеПараметры.КлючВарианта);
		КонецЕсли;
		
	КонецЕсли;
	
	
	ИдентификаторыМакета = ЗарплатаКадрыОтчеты.СоответствиеПользовательскихПолей(НастройкиОтчета);
	РезультатКомпоновкиМакета.Вставить("ИдентификаторыМакета", ИдентификаторыМакета);
	
	// Определяется макет печатной формы
	МакетПечатнойФормы = Неопределено;
	ДопСвойства.Свойство("МакетПечатнойФормы", МакетПечатнойФормы);
	
	Если МакетПечатнойФормы = Неопределено Тогда
		
		МакетПечатнойФормы = ЭтотОбъект.ПолучитьМакет("Решение");
	КонецЕсли;
	
	РезультатКомпоновкиМакета.Вставить("МакетПечатнойФормы", МакетПечатнойФормы);
	
	Если ДопСвойства.Свойство("МакетКомпоновкиДанных")
		И ДопСвойства.МакетКомпоновкиДанных <> Неопределено Тогда
		
		МакетКомпоновки = ДопСвойства.МакетКомпоновкиДанных;
		ДопСвойства.Удалить("МакетКомпоновкиДанных");
		
	Иначе
		
		МакетКомпоновки = ЗарплатаКадрыОтчеты.МакетКомпоновкиДанныхДляКоллекцииЗначений(ОбъектОтчета.СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
		
	КонецЕсли;
	
	Если ДопСвойства.Свойство("ФормированиеМакетаКомпоновкиДанных") Тогда
		
		ДопСвойства.Вставить("СкомпонованныйМакетКомпоновкиДанных", МакетКомпоновки);
		РезультатКомпоновкиМакета.Вставить("ДанныеОтчета", Новый Массив);
		
		ДопСвойства.Вставить("ОтчетПустой", Истина);
		ДопСвойства.Удалить("ФормированиеМакетаКомпоновкиДанных");
		
	Иначе
		
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, , Истина);
		
		ДанныеОтчета = Новый ДеревоЗначений;
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		ПроцессорВывода.УстановитьОбъект(ДанныеОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
		
		ДопСвойства.Вставить("ОтчетПустой", ДанныеОтчета.Строки.Количество() = 0);
		
		РезультатКомпоновкиМакета.Вставить("ДанныеОтчета", ДанныеОтчета);
		
	КонецЕсли;
	
	РезультатКомпоновкиМакета.Вставить("ОтчетПустой", ДопСвойства.ОтчетПустой);
	
	Возврат РезультатКомпоновкиМакета;
	
КонецФункции
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                 Параметры Выбора
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  
// https://www.youtube.com/watch?v=O71ewnSQtGE&t=3s - маски, связи и т.д 

Автоматически заполняются параметры из виртуальных таблиц, их нельзя удалить.

Поля настройки:
Значение				- Значение по умолчанию
Включать в доступные поля 		- Если нужно иметь возможность выводит параметр как поле в таблицу отчета.
Ограничение доступности 		- Может ли пользователь иметь доступ к этому параметру.
Запрещать незаполненные значения 	- Например нельзя оставить пустую дату, но можно в целом снять голочку использования параметра для отчета 
Использование 				- Отвечает за голочку использования параметра

- Параметры редактирования: // https://www.youtube.com/watch?v=O71ewnSQtGE&t=3s - маски, связи и т.д 
Маска 					- Например как для номера телефона 
Связи параметров выбора  		- Например есть параметр отчета: Контрагент и Договор, нужно что бы в форме выбора Договоров были только те где Владелец = выбранный Контрагент.
Отбор.Владелец | Контрагент | Отчищать
Параметры выбора 			- Например форма выбора должна содержать только договоры с поставщиками Отбор.Поставщики(Истина)

В запросе нужно создавать только обязательные параметры. Например, в параметре запроса указан контрагент, но пользователь хочет иметь возможноть получить отчет по всем контрагентам.
Для этого есть в конструкторе запроса закладка компановка данных или реализовывать с помощью отбор (ограниченность полей настройки), или характеристики 

////////////////////////////////////////////////////////////////
                ЗаполнениеФормыВыбораПараметра
////////////////////////////////////////////////////////////////
В пользовательском режиме в параметрах выбирается только номенклатуру являющуеся Спецификацификацией

1) На вкладке Параметры указывается пустая ссылка на номерклатуру
2) Программно запросом заполняется и замещается пуская ссылка на ТЗ 
Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	| СпецификацииИзделий.Номенклатура КАК Номенклатура
	|ИЗ
	| РегистрСведений.СпецификацииИзделий КАК СпецификацииИзделий";
	
	РезультатЗапроса = Запрос.Выполнить();
	СписокВыбора.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Номенклатура"));

	СхемаКомпоновкиДанных.Параметры.Спецификация.ПараметрыРедактирования.Элементы[2].Значение[0].Значение = СписокВыбора;

////////////////////////////////////////////////////////////////
                	ВыборПериодаВывода
////////////////////////////////////////////////////////////////
Есть выбор с какой переодичностью выводить данные в отчет: Месяц, Год и т.д.

Пункты: 
1) Созадется запрос с Выбором переодичности
2) Заполняются доступные значения в разделе "Параметры" 

ВЫБРАТЬ
	НДФЛПеречисленныйОбороты.Организация КАК Организация,
	НДФЛПеречисленныйОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	НДФЛПеречисленныйОбороты.СуммаОборот КАК СуммаОборот,
	НДФЛПеречисленныйОбороты.СуммаСПревышенияОборот КАК СуммаСПревышенияОборот,
	ВЫБОР
		КОГДА &Переодичность = 1
			ТОГДА НДФЛПеречисленныйОбороты.ПериодДень
		КОГДА &Переодичность = 2
			ТОГДА НДФЛПеречисленныйОбороты.ПериодНеделя
		КОГДА &Переодичность = 3
			ТОГДА НДФЛПеречисленныйОбороты.ПериодМесяц
	КОНЕЦ КАК Период
ИЗ
	РегистрНакопления.НДФЛПеречисленный.Обороты(, , Авто, ) КАК НДФЛПеречисленныйОбороты

В Параметре указывается список выбора и доступные значения с представлением.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
												Наборы данных
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
Ограничение поля 		- Само поле например из запроса
Ограничение реквизита 		- Ограничение реквизитов ссылочного поля например из запроса
Можно выбрать что именно запретить вывод поля, установка отборов, сортировки или выбирать в качестве поля группировки

Выражение представления		- Можно использовать функции или НаименованиеПоля (Номенклатура) + НаименованиеПоля (Номер)
Выражение упорядочивания 	- Например поле Номенклатура хотим упорядочить по Номеру, а не по наименованию  
Тип значения			- Накладывает отбор на строки отчета  по типу значения. Например нужно выводит только строки где Регистратор Расход товара
Доступные значения 		- Еказываются достпупные значения, например можно выделить не все значения перечисления и справочника

////////////////////////////////////////////////////////////////
			Роли
////////////////////////////////////////////////////////////////
Курсы\1C\СКД\[ironskills] Разработка отчетов в 1С. Система компоновка данных (2021)\11
Необходими для корректного отображения остатков. 

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
												Связи наборов данных
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
Типы связей: соединение, объединение.
В некоторых случаях используется для оптимизации, когда пользователь отключает отображение всех полей и отобров по этим полям в выводимом дочернем наборе данных, тогда запрос этого набора не будет выполняться.
Используется для соединение/объединение набор запрос и набор объект

////////////////////////////////////////////////////////////////
			Набор объект
////////////////////////////////////////////////////////////////
Заполняется данными при компановки
// Курсы\1C\СКД\[ironskills] Разработка отчетов в 1С. Система компоновка данных (2021)\06

1) Получение данных
2) Получение схемы компановки данных
3) Получение настроек
4) Получение макета
5) Передача результата запроса и выполнение компановки
6) Вывод результата компановки

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
												Вычисляемые поля
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Могут быть использованы экспортные функции общего модуля (на сервере), функции встроенного языка, простые методы вычисления
Настраивается формат и тд. 
При полной или частично программной компановке и использовании экспортных функций общего модуля 
необходимо установить у ПроцессораКомпановки.Инициализировать(...,ВозможностьИспользованияВнешнихФункций = Истина)
Может не выводиться, потому что поле не добавлено в ресурс 

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
												Ресурсы
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Аналогия с итогами для запроса.
Используется для итогов.

Выражение - можно использовать экспортные функции общего модуля (на сервере), Вычислить, Вычислить выражение

Расчитывать по - для явного указания полей для которых требуется посчитать итоги. 
Например группировка по Контрагенту, потом по Валюте в итоге получится Сумма по всем суммам в разных Валютах.
А с точки зрения бизнес процесса это неправильно. Нужен Расчитывать по только для Валюты   

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
												Макет
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// https://infostart.ru/1c/articles/653778/
// Курсы\1C\СКД\[ironskills] Разработка отчетов в 1С. Система компоновка данных (2021)\08\Примеры работы с Макетом в СКД - наглядная обработка

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
												Вкладка Настройки
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
На уровне группировки поля можно выводить по иерархии, только по иерархии, без иерархии. ПКМ -> Поля группировки.
Для каждого уровня группировки можно включать или отключать отображение полей, например отключить отображение Ресурса для верхней группировки, а для нижней оставить.

////////////////////////////////////////////////////////////////
			Изменение структуры отчета
////////////////////////////////////////////////////////////////
Состав элементов пользовательских настроект - отвечает за вкл/выкл отображения группировок и/или отображения выбранных полей и/или отборов и/или т.д.

////////////////////////////////////////////////////////////////
			Выбранные поля
////////////////////////////////////////////////////////////////
Можно выбирать реквизиты через точку. Тогда выбранный реквизит будет распологаться в одной ячейки с объектом. Например "Вентилятор, 00001".
Если требуется сделать раздельно, то на закладке Другие настройки у поля Расположение реквизитов усановить в Отдельно.
Для ограничения выбора ссылочных полей на закладке Наборы данных установить галочку у Ограничение реквизитов + Поле
Можно устанавливать заголовок поля.

////////////////////////////////////////////////////////////////
			Отбор
////////////////////////////////////////////////////////////////
Первая галочка указывается на использование отбора при открытии отчета 

////////////////////////////////////////////////////////////////
			Пользовательские поля
////////////////////////////////////////////////////////////////
// https://infostart.ru/1c/articles/97245/

////////////////////////////////////////////////////////////////
			Другие настройки
////////////////////////////////////////////////////////////////
Все настройки в списке с таблуляцией используются для диаграмм

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
												Оптимизация
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
Запрет пользователю устанавливать произвольный отбор и/или вывод полей от ссылочного типа через точку
Запрет сортировки

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
											Расширение языка запросов
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
// https://infostart.ru/1c/articles/1092772/
1) Необходим для гибкого формирования отчета, например, если не стоит отбор значит выводить все записи, если стоит то только по нужным
2) Четкое определение наложения отборов в запросе. Например нужно в 1 и 2 таблице запросе не накладывать условие по полю Склад, а в 3 таблице необходимо. Без снятия автозаполнения СКД наложит обор везде где есть поле Склад

Автозаполнение - Возможность СКД создавать необходимые Параметры, Поля, универсально по наименованию полей накладывать отборы в запросе везде где есть такое наименование поля, устанавливать сортировку и т.д.
Номер группы отвечает за вариативность наложения соединения. Например соединяется 3 таблицы, 2 имеют один номер группы и из одной вообще не выбираются поля, тогда все равно в конечном запросе будут 3 соединения

////////////////////////////////////////////////////////////////
		Доступн к дочерним реквизитам
////////////////////////////////////////////////////////////////
{
Товар.* - Все дочерние реквизиты будут доступны
}

////////////////////////////////////////////////////////////////
		Вывод полей без автозаполнения
////////////////////////////////////////////////////////////////
ВЫБРАТЬ
Товар,
Склад
ВЫБРАТЬ
{
Товар.* - В отчете будет только поле Товар
}
...

////////////////////////////////////////////////////////////////
			Отбор
////////////////////////////////////////////////////////////////
вкл/вкл отбор если параметр применяется при формировании отчета
...
{
ГДЕ
	Товар = НужныйТовар
}
Примечание: аккуратнее с двойными условиями. Например Дата МЕЖДУ ДатаНачала И ДатаОкончания - условие применится только если применяются два параметра

////////////////////////////////////////////////////////////////
			Опыт
////////////////////////////////////////////////////////////////
Если СКД не правильно формирует запрос при отборах добавляя лишнии условия ГДЕ и т.д. можно либо менять наименование этих полей, либо Убирать автозаполнение и создавать расширение запроса в местах требующих отбора

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
												Особенности
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 

////////////////////////////////////////////////////////////////
	Формирование наименование полей (ВАЖНО для ОТБОРОВ)
////////////////////////////////////////////////////////////////
// Наименования полей в итоговой таблице должны быть уникальны относительно временных таблиц одного запроса.
// Например: Во временной таблице есть поле "ВТР_БитАдаптерВыгрузитьДанныеВERP", тогда в итоговой должно быть уникальное имя "ВТР_БитАдаптерВыгрузитьДанныеВERPИтог".
// Это связанно формированием запросов внутренними средствами СКД. СКД формирует текст запроса на основании выделенных отборов. Например отбирается по полю "ВТР_БитАдаптерВыгрузитьДанныеВERPИтог",
// тогда СКД ставит везде где в тексте запроса есть слово "ВТР_БитАдаптерВыгрузитьДанныеВERPИтог" условие ГДЕ ВТР_БитАдаптерВыгрузитьДанныеВERPИтог = ... . Часто подобная логика уводит от верного направления
// достижения результата, потому что предпологается что отбор наложиться только на итоговую таблица, и не будет накладываться на временные таблицы где используется такое же наименование поля
  
  
