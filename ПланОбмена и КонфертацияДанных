////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                 ПланОбмена (общее)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//книга Технологии Интеграции

Параметр Авторегистрация находящийся в ПланОбмена -> Состав можнт меняться программно в любой момент. Обычно в коде указывается в дерективе ПередЗаписью
или ПередУдалением. Там могут производиться проверки на изменение объекта и если объект Модифицировон, то отправляется на обмен.

Узел = ПланыОбмена.УдаленныеСклады.НайтиПоКоду(″Оптовый″);
Объект.ОбменДанными.Получатели.Автозаполнение = Истина;
Объект.ОбменДанными.Получатели.Добавить(Узел);
Объект.Записать();

//////////// ОТСЫЛКА  //////////// Элемент пришел из ПланаОбмена и записывается в Справочник. Это отключение проверок 
//Данные.ОбменДанными.Загрузка = Истина;// Отключение проверок при записи элемента в Справочник. Например(отключение "ОбработкаЗаполнения"). Отсылка Ниже
Процедура ПередЗаписью(Отказ)
   Если ОбменДанными.Загрузка = Истина Тогда
       Возврат;
   КонецЕсли
   //Какая-то проверка
КонецПроцедуры
//////////// ОТСЫЛКА //////////// 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                 ПланОбмена (не универсальные)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Дочерняя
1) В базе дочерней подсключается Синхронизация и указывается префикс
2) Настроить синхронизацию данных "Имя типового решения"
3) Читаем инструкци Планаобмена(проверяем префиксы)

//Основная
1) Настраивается правила обмена(сетевой католог, потому что в нем можно сохранять переносы)
2) Настраивается Дата

//Итог 2 файла XML с правилами обмена X -> Y; Y-> X. Даже если связь односторонняя, Дочерней нужно знать как вернуть ответ Основной.

//Дочерняя
1) Настроить синхронизаци "Имя типового решения"
2) Загрузить файла XML с правилами обмена(из тех самых файлов создыных ранее)
3) Настройка Двухсторонняя или односторонняя
4) Сопоставление данных


/////////////////////////////////////////////////////////////////////////////////
Если есть доработки

1) Открыть обработку "Регистрация плана обмена" выбрать нужный план обмена
2) Добавить не типовой элемент в обмен
3) Выгрузить правила обмена для нужного ПланаОбмена они хранятся в макете
4) Добавить файл в "Конвертацию данных", а так же сделать выгрузку обеих баз для "Конвертации данных" 
5) Создать правила выгрузки
4) Сопоставить свойства
5) Загрузить правила обмена в "основную(в данном случае 8.3)"
6) Загрузить правила обмена в "дочернюю(в данном случае 8.2)" в регистр сведений Правила Обмена
7) Включить в состав "дечерней" правила обмена не типовой элемент


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                 ПланОбмена (универсальные)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Дочерняя
1) В базе дочерней подсключается Синхронизация и указывается префикс

//Основная
1) Настраивается синхронизация, устанавливается префикс
2) Настраивается правила обмена выбираются универсальные колекции (сетевой католог, потому что в нем можно сохранять переносы)




//Итог 2 файла XML с правилами обмена X -> Y; Y-> X. Даже если связь односторонняя, Дочерней нужно знать как вернуть ответ Основной.




/////////////////////////////////////////////////////////////////////////////////
           //План обмена не типовой обмен, Универсальный через файл
/////////////////////////////////////////////////////////////////////////////////
//https://www.youtube.com/watch?v=eIy96-xEjyU


1) Создаем план обмена, добавляем в состав необходимые элементы
2) В 1С Предприятии поздаем наименование Узлов
3) Создаем(например кнопку) в ее команде прописываем обработку. Подбор Узла, ЗаписьДанных
4) В базе Приемнике  создается план обмена, настраивается состав
5) Создается обработка чтения 

//Пункт 3)
#Область ПолучитьУзлы
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланОбмена1.Ссылка КАК Ссылка,
		|	ПланОбмена1.Код КАК Код
		|ИЗ
		|	ПланОбмена.ПланОбмена1 КАК ПланОбмена1
		|ГДЕ
		|	НЕ ПланОбмена1.ЭтотУзел";//Берем все Узлы кроме самого себя. (Самому себе отправлять не нужно)
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
#КонецОбласти
	
	ЭтотУзел = ПланыОбмена.ПланОбмена1.ЭтотУзел();//Это собственный узел

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл //Переборка всех улов обмена
	    
	    текУзел = ВыборкаДетальныеЗаписи.Ссылка;

    //{Формирование файла обмена
    //Объект.КаталогОбмена - католог в котором храниться файл XML для обмена
    //ЭтотУзел.Код         - "код" узла отправителя
    //текУзел.Код          - "код" узла получателя

		ЗаписьXML = Новый ЗаписьXML();
		ИмяФайла = СтрШаблон("%1\%2_%3.xml",Объект.КаталогОбмена,ЭтотУзел.Код,текУзел.Код);
		ЗаписьXML.ОткрытьФайл(ИмяФайла);
    //Формирование файла обмена}
 
    //{Формирование сообщения Обмена
    //ЗаписьСообщения.НомерСообщения - Номер сообщение отправленный в сообщении обмена другому Узлу,
    //необходим для отслеживания: Отправил пакет №7 -> Принял пакет №7 

		ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
		ЗаписьСообщения.НачатьЗапись(ЗаписьXML, текУзел);
		Выборка = ПланыОбмена.ВыбратьИзменения(текУзел, ЗаписьСообщения.НомерСообщения);//Выбрать все изменения для текущего узла
		
		Пока Выборка.Следующий() Цикл //Перебираем все изменения для текущего узла
			Данные = Выборка.Получить();
			ЗаписатьXML(ЗаписьXML, Данные);
		КонецЦикла;
		
		ЗаписьСообщения.ЗакончитьЗапись();
	  //Формирование сообщения Обмена}

	КонецЦикла;

Пункт 5)
#Область ПолучитьУзлы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланОбмена1.Ссылка КАК Ссылка,
	|	ПланОбмена1.Код КАК Код
	|ИЗ
	|	ПланОбмена.ПланОбмена1 КАК ПланОбмена1
	|ГДЕ
	|	НЕ ПланОбмена1.ЭтотУзел";//Все кроме собственного узла
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
#КонецОбласти 
	
	ЭтотУзел = ПланыОбмена.ПланОбмена1.ЭтотУзел();// Собственный узел
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл// Переборка узлов
		
		текУзел = ВыборкаДетальныеЗаписи.Ссылка;


		//{Открытие и чтение файла обмена
    //Объект.КаталогОбмена - католог в котором храниться файл XML для обмена
    //ЭтотУзел.Код         - "код" узла отправителя
    //текУзел.Код          - "код" узла получателя
    //ЧтениеСообщения.Отправитель    - Узел отправитеь
    //ЧтениеСообщения.НомерПринятого - Номер сообщение отправленный в сообщении обмена другому Узлу,
    //необходим для отслеживания: Отправил пакет №7 -> Принял пакет №7

		ИмяФайла = СтрШаблон("%1\%2_%3.xml",Объект.КаталогОбмена,текУзел.Код, ЭтотУзел.Код);
		
		Файл = Новый Файл(ИмяФайла);//Проверка наличия файла
		Если НЕ Файл.Существует() Тогда
			Продолжить;
		КонецЕсли;
		
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.ОткрытьФайл(ИмяФайла);
		ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
		ЧтениеСообщения.НачатьЧтение(ЧтениеXML);//Чтение шапки сообщения обмена
		ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель, ЧтениеСообщения.НомерПринятого);//Уведомляет базу отправителя о получении данных
		
		Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл
			Данные = ПрочитатьXML(ЧтениеXML);
			Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
			Данные.ОбменДанными.Загрузка = Истина;// Отключение проверок при записи элемента в Справочник. Например(отключение "ОбработкаЗаполнения"). Отсылка Ниже
			Данные.Записать();
		КонецЦикла;
		
		ЧтениеСообщения.ЗакончитьЧтение();

		//Открытие и чтение файла обмена}
	КонецЦикла;

//////////// ОТСЫЛКА //////////// 
//Данные.ОбменДанными.Загрузка = Истина;// Отключение проверок при записи элемента в Справочник. Например(отключение "ОбработкаЗаполнения"). Отсылка Ниже
Процедура ПередЗаписью(Отказ)
   Если ОбменДанными.Загрузка = Истина Тогда
       Возврат;
   КонецЕсли
   //Какая-то проверка
КонецПроцедуры
//////////// ОТСЫЛКА //////////// 

/////////////////////////////////////////////////////////////////////////////////
           //План обмена не типовой обмен, Универсальный при расхождении количества или типов Реквезитов
/////////////////////////////////////////////////////////////////////////////////
//https://www.youtube.com/watch?v=eIy96-xEjyU

/////////////////////////////////////////////////////////////////////////////////
//Модуль отправки

#Область ПолучитьУзлы
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланОбмена1.Ссылка КАК Ссылка,
		|	ПланОбмена1.Код КАК Код
		|ИЗ
		|	ПланОбмена.ПланОбмена1 КАК ПланОбмена1
		|ГДЕ
		|	НЕ ПланОбмена1.ЭтотУзел";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
#КонецОбласти
	
	ЭтотУзел = ПланыОбмена.ПланОбмена1.ЭтотУзел();
	
	СтруктураНоменклатурыПолучателя = Новый Структура("Артикул,Наименование,Вид,УИД,Тип");//Производится через структуру

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

    //Объект.КаталогОбмена - католог в котором храниться файл XML для обмена
    //ЭтотУзел.Код         - "код" узла отправителя
    //текУзел.Код          - "код" узла получателя
    //ЧтениеСообщения.Отправитель    - Узел отправитеь
    //ЧтениеСообщения.НомерПринятого - Номер сообщение отправленный в сообщении обмена другому Узлу,
    //необходим для отслеживания: Отправил пакет №7 -> Принял пакет №7


	        текУзел = ВыборкаДетальныеЗаписи.Ссылка;
	    
		ЗаписьXML = Новый ЗаписьXML();
		ИмяФайла = СтрШаблон("%1\%2_%3.xml",Объект.КаталогОбмена,ЭтотУзел.Код,текУзел.Код);
		ЗаписьXML.ОткрытьФайл(ИмяФайла);
		ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
		ЗаписьСообщения.НачатьЗапись(ЗаписьXML, текУзел);
		Выборка = ПланыОбмена.ВыбратьИзменения(текУзел, ЗаписьСообщения.НомерСообщения);
		
		Пока Выборка.Следующий() Цикл
			Данные = Выборка.Получить();
			Если ТипЗнч(Данные) = Тип("СправочникОбъект.Номенклатура") Тогда
				ЗаполнитьЗначенияСвойств(СтруктураНоменклатурыПолучателя, Данные);
				СтруктураНоменклатурыПолучателя.Артикул	= Данные.Артикул2;
				СтруктураНоменклатурыПолучателя.УИД = Строка(Данные.Ссылка.УникальныйИдентификатор());
				СтруктураНоменклатурыПолучателя.Тип = "Справочник.Номенклатура";
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML, СтруктураНоменклатурыПолучателя);// используется ЗаписьXML что бы сериализоввывать структуры
			Иначе
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Данные);
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаписьСообщения.ЗакончитьЗапись();
	
	КонецЦикла;

/////////////////////////////////////////////////////////////////////////////////
//Модуль получения

#Область ПолучитьУзлы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланОбмена1.Ссылка КАК Ссылка,
	|	ПланОбмена1.Код КАК Код
	|ИЗ
	|	ПланОбмена.ПланОбмена1 КАК ПланОбмена1
	|ГДЕ
	|	НЕ ПланОбмена1.ЭтотУзел";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
#КонецОбласти 
	
	ЭтотУзел = ПланыОбмена.ПланОбмена1.ЭтотУзел();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		текУзел = ВыборкаДетальныеЗаписи.Ссылка;
		
		ИмяФайла = СтрШаблон("%1\%2_%3.xml",Объект.КаталогОбмена,текУзел.Код, ЭтотУзел.Код);
		
		Файл = Новый Файл(ИмяФайла);
		Если НЕ Файл.Существует() Тогда
			Продолжить;
		КонецЕсли;
		
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.ОткрытьФайл(ИмяФайла);
		ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
		ЧтениеСообщения.НачатьЧтение(ЧтениеXML);
		ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель, ЧтениеСообщения.НомерПринятого);
		
		Пока СериализаторXDTO.ВозможностьЧтенияXML(ЧтениеXML) Цикл
			Данные = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
			Если ТипЗнч(Данные) = Тип("Структура") И Данные.Тип = "Справочник.Номенклатура" Тогда
				Ссылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.УИД));// По уникальному Идентификатору пыстаемся найти ссылку	
				ОбъектНоменклатуры = Ссылка.ПолучитьОбъект();//Пытаемся получить объект
				Если ОбъектНоменклатуры = Неопределено Тогда//Если объекта с тамим УИД не существует то создаем его
					ОбъектНоменклатуры = Справочники.Номенклатура.СоздатьЭлемент();				
					ОбъектНоменклатуры.УстановитьСсылкуНового(Ссылка);
				КонецЕсли; 
				ЗаполнитьЗначенияСвойств(ОбъектНоменклатуры, Данные); 
				ОбъектНоменклатуры.ОбменДанными.Загрузка = Истина;
				ОбъектНоменклатуры.Записать();
			Иначе		
				Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
				Данные.ОбменДанными.Загрузка = Истина;
				Данные.Записать();
			КонецЕсли;
		КонецЦикла;
		
		ЧтениеСообщения.ЗакончитьЧтение();
		
	КонецЦикла;


/////////////////////////////////////////////////////////////////////////////////
           //План обмена не типовой обмен, Универсальный через HTTP сервис
/////////////////////////////////////////////////////////////////////////////////
//https://www.youtube.com/watch?v=eIy96-xEjyU



/////////////////////////////////////////////////////////////////////////////////
//HTTP Сервис
Функция ver1DownloadData(Запрос)

			Ответ = Новый HTTPСервисОтвет(200);

	текУзел = ПланыОбмена.ПланОбмена1.НайтиПоКоду(Запрос.ПараметрыURL["node"]);

	СтруктураНоменклатурыПолучателя = Новый Структура("Артикул,Наименование,Вид,УИД,Тип,Цена,ЭтоГруппа");

	ЗаписьXML = Новый ЗаписьXML();
	ЗаписьXML.УстановитьСтроку();//Указывает что работаем со строкой, а не с файлом
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, текУзел);
	Выборка = ПланыОбмена.ВыбратьИзменения(текУзел, ЗаписьСообщения.НомерСообщения);

	Пока Выборка.Следующий() Цикл
		Данные = Выборка.Получить();
		Если ТипЗнч(Данные) = Тип("СправочникОбъект.Номенклатура") Тогда
			ЗаполнитьЗначенияСвойств(СтруктураНоменклатурыПолучателя, Данные);
			СтруктураНоменклатурыПолучателя.Артикул	= Данные.Артикул2;
			СтруктураНоменклатурыПолучателя.УИД = Строка(Данные.Ссылка.УникальныйИдентификатор());
			СтруктураНоменклатурыПолучателя.Тип = "Справочник.Номенклатура";
			СериализаторXDTO.ЗаписатьXML(ЗаписьXML, СтруктураНоменклатурыПолучателя);
		Иначе
			СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Данные);
		КонецЕсли;
		
	КонецЦикла;

	ЗаписьСообщения.ЗакончитьЗапись();

	Ответ.УстановитьТелоИзСтроки(ЗаписьXML.Закрыть());
	Ответ.Заголовки.Вставить("Content-type", "application/xml");

	Возврат Ответ;




КонецФункции

Функция ver1UploadData(Запрос)

	Ответ = Новый HTTPСервисОтвет(200);
	
	ЭтотУзел = ПланыОбмена.ПланОбмена1.ЭтотУзел();
	
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
	ЧтениеСообщения.НачатьЧтение(ЧтениеXML);
	ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель, ЧтениеСообщения.НомерПринятого);
	
	Пока СериализаторXDTO.ВозможностьЧтенияXML(ЧтениеXML) Цикл
		Данные = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
		Если ТипЗнч(Данные) = Тип("Структура") И Данные.Тип = "Справочник.Номенклатура" Тогда
			Ссылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.УИД));	
			ОбъектНоменклатуры = Ссылка.ПолучитьОбъект();
			Если ОбъектНоменклатуры = Неопределено Тогда
				ОбъектНоменклатуры = Справочники.Номенклатура.СоздатьЭлемент();				
				ОбъектНоменклатуры.УстановитьСсылкуНового(Ссылка);
			КонецЕсли; 
			ЗаполнитьЗначенияСвойств(ОбъектНоменклатуры, Данные); 
			ОбъектНоменклатуры.ОбменДанными.Загрузка = Истина;
			ОбъектНоменклатуры.Записать();
		Иначе		
			Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
			Данные.ОбменДанными.Загрузка = Истина;
			Данные.Записать();
		КонецЕсли;
	КонецЦикла;
	
	ЧтениеСообщения.ЗакончитьЧтение();
	
	
	Возврат Ответ;
	

КонецФункции

/////////////////////////////////////////////////////////////////////////////////
//Модуль Отправления


#Область ПолучитьУзлы
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланОбмена1.Ссылка КАК Ссылка,
		|	ПланОбмена1.Код КАК Код
		|ИЗ
		|	ПланОбмена.ПланОбмена1 КАК ПланОбмена1
		|ГДЕ
		|	НЕ ПланОбмена1.ЭтотУзел";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
#КонецОбласти
	
	ЭтотУзел = ПланыОбмена.ПланОбмена1.ЭтотУзел();
	
	СтруктураНоменклатурыПолучателя = Новый Структура("Артикул,Наименование,Вид,УИД,Тип");

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	    
	    текУзел = ВыборкаДетальныеЗаписи.Ссылка;
	    
		ЗаписьXML = Новый ЗаписьXML();
		ИмяФайла = СтрШаблон("%1\%2_%3.xml",Объект.КаталогОбмена,ЭтотУзел.Код,текУзел.Код);
		ЗаписьXML.ОткрытьФайл(ИмяФайла);
		ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
		ЗаписьСообщения.НачатьЗапись(ЗаписьXML, текУзел);
		Выборка = ПланыОбмена.ВыбратьИзменения(текУзел, ЗаписьСообщения.НомерСообщения);
		
		Пока Выборка.Следующий() Цикл
			Данные = Выборка.Получить();
			Если ТипЗнч(Данные) = Тип("СправочникОбъект.Номенклатура") Тогда
				ЗаполнитьЗначенияСвойств(СтруктураНоменклатурыПолучателя, Данные);
				СтруктураНоменклатурыПолучателя.Артикул	= Данные.Артикул2;
				СтруктураНоменклатурыПолучателя.УИД = Строка(Данные.Ссылка.УникальныйИдентификатор());
				СтруктураНоменклатурыПолучателя.Тип = "Справочник.Номенклатура";
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML, СтруктураНоменклатурыПолучателя);
			Иначе
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML, Данные);
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаписьСообщения.ЗакончитьЗапись();
	
	КонецЦикла;


/////////////////////////////////////////////////////////////////////////////////
//Модуль получения


#Область ПолучитьУзлы
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланОбмена1.Ссылка КАК Ссылка,
	|	ПланОбмена1.Код КАК Код
	|ИЗ
	|	ПланОбмена.ПланОбмена1 КАК ПланОбмена1
	|ГДЕ
	|	НЕ ПланОбмена1.ЭтотУзел";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
#КонецОбласти 
	
	ЭтотУзел = ПланыОбмена.ПланОбмена1.ЭтотУзел();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		текУзел = ВыборкаДетальныеЗаписи.Ссылка;
		
		ИмяФайла = СтрШаблон("%1\%2_%3.xml",Объект.КаталогОбмена,текУзел.Код, ЭтотУзел.Код);
		
		Файл = Новый Файл(ИмяФайла);
		Если НЕ Файл.Существует() Тогда
			Продолжить;
		КонецЕсли;
		
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.ОткрытьФайл(ИмяФайла);
		ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
		ЧтениеСообщения.НачатьЧтение(ЧтениеXML);
		ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель, ЧтениеСообщения.НомерПринятого);
		
		Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл
			Данные = ПрочитатьXML(ЧтениеXML);
			Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
			Данные.ОбменДанными.Загрузка = Истина;
			Данные.Записать();
		КонецЦикла;
		
		ЧтениеСообщения.ЗакончитьЧтение();
		
	КонецЦикла;
