////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                 УО и УФ
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//сначало сделать УО в конфигураторе
//брать значения дял программой реализации как в УО Конфигуратора
//Например УО в Конфигураторе поле "ОформляемоеПоле" имеет значение сэ_ЭтапыМероприятийСтатус его и используем при программной реализации

&НаСервере
Процедура сэ_УсловноеОформлениеСтатусы_ЭтаповМероприятий()
	//Цвета
	СтатусВыполненЦвет = Новый Цвет(215, 240, 199);
	СтатусИзмененЦвет = Новый Цвет(250, 250, 217);
	СтатусВРаботеЦвет = Новый Цвет(210, 232, 245);
	СтатусАннулированИлиПриостановленЦвет = Новый Цвет(255, 238, 238);
	 
	
	
	
	
	
	
	ЭлементОформления = УсловноеОформление.Элементы;
	ЭлементОформления.Очистить();
	
	
	//Статус В Работе
	ЭлементУО = ЭлементОформления.Добавить();
	ЭлементУО.Использование = Истина;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",СтатусВРаботеЦвет);
	
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятий.Статус");//путь к данным реквезита на форме сэ_ЭтапыМероприятийСтатус
	ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Перечисления.сэ_СтатусыЭтаповПлановыхМероприятий.ВРаботе;
	ЭлементУсловия.Использование = Истина;
	
	
    ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятийСтатус");//такое значение было в поле УО при настройках в Конфигураторе
	
	
	
	//Статус Изменен	
	ЭлементУО = ЭлементОформления.Добавить();
	ЭлементУО.Использование = Истина;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",СтатусИзмененЦвет);
	
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятий.Статус");//путь к данным реквезита на форме сэ_ЭтапыМероприятийСтатус
	ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Перечисления.сэ_СтатусыЭтаповПлановыхМероприятий.Изменен;
	ЭлементУсловия.Использование = Истина;
	
	
	ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятийСтатус");
	
	
	
	
	//Статус Выполнен	
	ЭлементУО = ЭлементОформления.Добавить();
	ЭлементУО.Использование = Истина;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",СтатусВыполненЦвет);
	
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятий.Статус");//путь к данным реквезита на форме сэ_ЭтапыМероприятийСтатус
	ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Перечисления.сэ_СтатусыЭтаповПлановыхМероприятий.Выполнен;
	ЭлементУсловия.Использование = Истина;
	
	
	ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятийСтатус");
	
	
	
	
	//Статус Аннулирован Или Приостановлен
	ЭлементУО = ЭлементОформления.Добавить();
	ЭлементУО.Использование = Истина;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",СтатусАннулированИлиПриостановленЦвет);
	
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ЭлементУсловия.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	СтатусАннулирован = ЭлементУсловия.Элементы.Вставить(0,Тип("ЭлементОтбораКомпоновкиДанных"));
	СтатусПриостановлен = ЭлементУсловия.Элементы.Вставить(1,Тип("ЭлементОтбораКомпоновкиДанных"));
	
	
	СтатусАннулирован.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятий.Статус");//путь к данным реквезита на форме сэ_ЭтапыМероприятийСтатус
	СтатусАннулирован.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	СтатусАннулирован.ПравоеЗначение = Перечисления.сэ_СтатусыЭтаповПлановыхМероприятий.Аннулирован;
	СтатусАннулирован.Использование = Истина;
	
	СтатусПриостановлен.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятий.Статус");//путь к данным реквезита на форме сэ_ЭтапыМероприятийСтатус
	СтатусПриостановлен.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	СтатусПриостановлен.ПравоеЗначение = Перечисления.сэ_СтатусыЭтаповПлановыхМероприятий.Приостановлен;
	СтатусПриостановлен.Использование = Истина;
	
	
	ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("сэ_ЭтапыМероприятийСтатус");
		
КонецПроцедуры
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Сравнение двух Таблиц Значений

&НаСервере
Функция СравнитьТаблицыНаборовЗаписей() 
	
    Если ТипЗнч(ТаблицаЗначений1) <> Тип("ТаблицаЗначений") ИЛИ ТипЗнч(ТаблицаЗначений2) <> Тип("ТаблицаЗначений") Тогда
        Возврат Ложь;
    КонецЕсли; 
    
    Если ТаблицаЗначений1.Количество() <> ТаблицаЗначений2.Количество() Тогда
        Возврат Ложь;
    КонецЕсли; 

    Если ТаблицаЗначений1.Колонки.Количество() <> ТаблицаЗначений2.Колонки.Количество() Тогда
        Возврат Ложь;
    КонецЕсли;
    
    // Проверим поля
 
    Для каждого Колонка Из ТаблицаЗначений1.Колонки Цикл
        Если ТаблицаЗначений2.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
            Возврат Ложь;
        КонецЕсли;
    КонецЦикла; 
    Для каждого Колонка Из ТаблицаЗначений2.Колонки Цикл
        Если ТаблицаЗначений1.Колонки.Найти(Колонка.Имя) = Неопределено Тогда
            Возврат Ложь;
        КонецЕсли;
    КонецЦикла; 
    
    // сформируем строку индекса для оптимизации поиска по таблице значений
 
    СтрокаИндекса = "";
    Для каждого Колонка Из ТаблицаЗначений1.Колонки Цикл
        Если СтрокаИндекса = "" Тогда
            СтрокаИндекса = Колонка.Имя;
        Иначе
            СтрокаИндекса = СтрокаИндекса+","+Колонка.Имя;
        КонецЕсли;
    КонецЦикла;
    // добавим индекс
 
    ТаблицаЗначений2.Индексы.Добавить(СтрокаИндекса);
    
    // Проверим записи
 
    Для каждого СтрокаТаблицы Из ТаблицаЗначений1 Цикл
        СтруктураПоиска = Новый Структура;
        Для каждого Колонка Из ТаблицаЗначений1.Колонки Цикл
            СтруктураПоиска.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]);
        КонецЦикла;
        СтрокиТаблицы2 = ТаблицаЗначений2.НайтиСтроки(СтруктураПоиска);
        Если СтрокиТаблицы2.Количество() <> 1 Тогда
            Возврат Ложь;
        КонецЕсли; 
    КонецЦикла;
    
    // сформируем строку индекса для оптимизации поиска по таблице значений
 
    СтрокаИндекса = "";
    Для каждого Колонка Из ТаблицаЗначений2.Колонки Цикл
        Если СтрокаИндекса = "" Тогда
            СтрокаИндекса = Колонка.Имя;
        Иначе
            СтрокаИндекса = СтрокаИндекса+","+Колонка.Имя;
        КонецЕсли;
    КонецЦикла;
    // добавим индекс
 
    ТаблицаЗначений1.Индексы.Добавить(СтрокаИндекса);
    
    Для каждого СтрокаТаблицы Из ТаблицаЗначений2 Цикл
        СтруктураПоиска = Новый Структура;
        Для каждого Колонка Из ТаблицаЗначений2.Колонки Цикл
            СтруктураПоиска.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]);
        КонецЦикла;
        СтрокиТаблицы1 = ТаблицаЗначений1.НайтиСтроки(СтруктураПоиска);
        Если СтрокиТаблицы1.Количество() <> 1 Тогда
            Возврат Ложь;
        КонецЕсли; 
    КонецЦикла;
    
    Возврат Истина;
    
КонецФункции // СравнитьТаблицыЗначений() 



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                 Общеее
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////
// Заполенние колонки ТЗ для всех строк 


тз = Новый ТаблицаЗначений;
тз.Колонки.Добавить("Код");
тз.Колонки.Добавить("Наименование");
тз.Колонки.Добавить("Москва"	 , Новый ОписаниеТипов("Булево"));
тз.Колонки.Добавить("Новосибирск", Новый ОписаниеТипов("Булево"));

//заполняем таблицу значений
НоваяСтрока = тз.Добавить();
НоваяСтрока.Код = "001";
НоваяСтрока.Наименование = "Стул деревянный";

НоваяСтрока = тз.Вставить(0);
НоваяСтрока.Код = "002";
НоваяСтрока.Наименование = "Стол деревянный";

//теперь заполняем разом наличие во всех городах
тз.ЗаполнитьЗначения(Истина, "Москва,Новосибирск");
