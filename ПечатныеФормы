//https://disk.yandex.ru/d/hQ1yFUNiBNPHww ВертикальнаяСтрокаЦикл
//https://disk.yandex.ru/d/DLuXCIyUnAXh8A ГоризонтальнаяСтрокаЦикл

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Функция СведенияОВнешнейОбработке() Экспорт
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
	ПараметрыРегистрации = Новый Структура;
	
	
	// Объявим еще одну переменную, которая нам потребуется ниже
	МассивНазначений = Новый Массив;
	
	// Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать.
	// Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	
	//Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
	//Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе,
	//которые поддерживают механизм ВПФ
	//МассивНазначений.Добавить("Документ.АвансовыйОтчет");
	
	МассивНазначений.Добавить("Документ.Командировка");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	
	// Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Наименование", "Форма Т-9а (Химсервис)");
	
	// Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	
	// Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
	ПараметрыРегистрации.Вставить("Версия", "1");
	ПараметрыРегистрации.Вставить("Информация", "Форма Т-9а (Химсервис)");
	
	// Создадим таблицу команд (подробнее смотрим ниже)
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	// Добавим команду в таблицу
	//ДобавитьКоманду(ТаблицаКоманд, "АвансовыйОтчет", "АвансовыйОтчет", "ВызовСерверногоМетода", Истина, "ПечатьMXL");
	
	ДобавитьКоманду(ТаблицаКоманд, "Форма Т-9а (Химсервис)", "Т9а_от_5_1_2004", "ВызовСерверногоМетода", Ложь, "ПечатьMXL");
	
	// Сохраним таблицу команд в параметры регистрации обработки
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	// Теперь вернем системе наши параметры
	Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	// Создадим пустую таблицу команд и колонки в ней
	Команды = Новый ТаблицаЗначений;
	
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	
	// Для печатной формы должен содержать строку ПечатьMXL
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	Возврат Команды;
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	// Добавляем команду в таблицу команд по переданному описанию.
	// Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//ФОрмаЯ = ПолучитьФорму("Форма");
	//результат = Формая.ОткрытьМодально();
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Т9а_от_5_1_2004") Тогда
		ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Трудовой_Договор";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Т9а_от_5_1_2004", "Форма Т-9а (Химсервис)", 
			ТабличныйДокументСформировать("Т9а_от_5_1_2004",МассивОбъектов,ОбъектыПечати),,"Т9а_от_5_1_2004");
	КонецЕсли;

	
КонецПроцедуры // Печать()

Функция ТабличныйДокументСформировать(ИмяМакета, МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Если МассивОбъектов[0].Организация.ИНН = "7116001422" Тогда;
		Макет = ПолучитьМакет("Т9а_от_5_1_2004");
	Иначе
		Макет = ПолучитьМакет("Т9а_от_5_1_2004_ЭХЗ");
	КонецЕсли;
	
	ОбластьМакетаШапка				= Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ОбластьМакетаПодвал				= Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакетаБоковойЗаголовок	= Макет.ПолучитьОбласть("ЗаголовокРаботников"); // "боковик" формы
	ОбластьМакета 					= Макет.ПолучитьОбласть("Работник"); // область работника
	
	
	Для Каждого Документ Из МассивОбъектов Цикл
		
		ДокументСсылкаНаКомандировка = Истина;
		Если ТипЗнч(МассивОбъектов[0]) = Тип("ДокументСсылка.Командировка") Тогда
			ДокументСсылкаНаКомандировка = Истина;
		Иначе
			ДокументСсылкаНаКомандировка = Ложь;	
		КонецЕсли;
		
		Если ДокументСсылкаНаКомандировка = Истина Тогда 
			ВыборкаКомандировкаДанные = КомандировкаДанные(Документ);
		Иначе 
			ВыборкаКомандировкаДанные = КомандировкаСписком(Документ);
		КонецЕсли;  
		
		
		
		
		ВыборкаКомандировкаДанные.Следующий();
		//////
		//////ОбластьМакетаШапка
		ОбластьМакетаШапка.Параметры.КодПоОКПО			      = ВыборкаКомандировкаДанные.ОрганизацияКодПоОКПО;
		ОбластьМакетаШапка.Параметры.ДатаДок	              = Формат(ВыборкаКомандировкаДанные.Дата, "ДЛФ = D");  
		ОбластьМакетаШапка.Параметры.НомерДок                 = ВыборкаКомандировкаДанные.Номер;
		//////ОбластьМакетаШапка
		
		// Начинаем формировать выходной документ
		ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.
		ТабДокумент.Вывести(ОбластьМакетаБоковойЗаголовок); // "боковик" формы
		////// 
		
		
		
		
		ВыведеноСтрок = 0; ВыведеноСтрокВДокумент = 0;
		ВыборкаКомандировкаДанные.Сбросить();
		
		Пока ВыборкаКомандировкаДанные.Следующий() Цикл
			
			
			// Каждый приказ на отдельной странице.
			Если ВыведеноСтрок = 3 Тогда
				ВыведеноСтрокВДокумент = ТабДокумент.ВысотаТаблицы;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ВыведеноСтрок = 0;
				ТабДокумент.Вывести(ОбластьМакетаБоковойЗаголовок); // "боковик" формы
			КонецЕсли;
			
			//////ОбластьМакета  
			мДлинаСуток = 86400;
			//////Поиск ТабельныйНомер, Должность, Подразделение актуальных данных на дату Док
			СсылкаСотрудников = Новый Массив;
			СсылкаСотрудников.Добавить(ВыборкаКомандировкаДанные.СотрудникСсылка);
			ДатаПоиска = ВыборкаКомандировкаДанные.Дата;
			КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, СсылкаСотрудников, "ТабельныйНомер, Должность, Подразделение, ДокументВид, ДокументСерия, ДокументНомер",ДатаПоиска, Неопределено);
			Данные = КадровыеДанные[0];
			//////
			//ОбластьМакета.Параметры.РеквизитыПаспорта = Строка(Данные.ДокументВид) + " " + Строка(Данные.ДокументСерия) + " " + Строка(Данные.ДокументНомер);
			ОбластьМакета.Параметры.ТабельныйНомер = Данные.ТабельныйНомер;
			ОбластьМакета.Параметры.Должность = Данные.Должность;
			ОбластьМакета.Параметры.ПодразделениеРаботника = Данные.Подразделение;
			СсылкаСотрудников.Очистить();
			//////
			
			//РезультатСклонения = "";
			//Если УниверсальныеМеханизмы.Просклонять(глЗначениеПеременной("глКомпонентаСклоненияФИО"), ВыборкаКомандировкаДанные.СотрудникСсылка, 4,ВыборкаКомандировкаДанные.ФизическоеЛицоПол, РезультатСклонения) Тогда
			//	ОбластьМакета.Параметры.Работник	= РезультатСклонения;
			//КонецЕсли;
			
			РезультатСклонения = "";
			Если ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ВыборкаКомандировкаДанные.СотрудникСсылка), 4, РезультатСклонения, ВыборкаКомандировкаДанные.ФизическоеЛицоПол) Тогда
				ОбластьМакета.Параметры.Работник	= РезультатСклонения;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Цель                       = ВыборкаКомандировкаДанные.Цель;
			ОбластьМакета.Параметры.Продолжительность          = ?(ЗначениеЗаполнено(ВыборкаКомандировкаДанные.ДатаОкончания),Цел((ВыборкаКомандировкаДанные.ДатаОкончания - ВыборкаКомандировкаДанные.ДатаНачала + 1) / мДлинаСуток) + 1,"");
			ОбластьМакета.Параметры.ДатаНачала                 = Формат(ВыборкаКомандировкаДанные.ДатаНачала, "ДЛФ = D");
			ОбластьМакета.Параметры.ДатаОкончания              = Формат(ВыборкаКомандировкаДанные.ДатаОкончания, "ДЛФ = D");
			ОбластьМакета.Параметры.ОрганизацияНазначения      = ВыборкаКомандировкаДанные.ОрганизацияНазначения;
			ОбластьМакета.Параметры.ИсточникФинансирования      = ВыборкаКомандировкаДанные.КомандировкаКомандировкаЗаСчетСредств;
			ОбластьМакета.Параметры.СтранаНазначения           = ВыборкаКомандировкаДанные.МестоНазначения;
			//ОбластьМакета.Параметры.ПродолжительностьЧистая = ?(ЗначениеЗаполнено(ВыборкаРаботники.ДатаОкончания),Цел((ВыборкаРаботники.ДатаОкончания - ВыборкаРаботники.ДатаНачала + 1) / мДлинаСуток) + 1 - ВыборкаРаботники.ВремяНахожденияВПути,"");// Не использовалось в УПП
			//////ОбластьМакета 
			
			
			
			
			//////ОбластьМакетаПодвал
			ОбластьМакетаПодвал.Параметры.ДолжностьРуководителя = ВыборкаКомандировкаДанные.ДолжностьРуководителяСсылка;
			ОбластьМакетаПодвал.Параметры.ФИОРуководителя       = ВыборкаКомандировкаДанные.РуководительФИО; 
			ОбластьМакетаПодвал.Параметры.ОснованиеКомандировки       = ВыборкаКомандировкаДанные.Основание;
			//////ОбластьМакетаПодвал
			
			ТабДокумент.Присоединить(ОбластьМакета);
			ВыведеноСтрок = ВыведеноСтрок + 1;
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // область работника
		Для Сч = ВыведеноСтрок + 1 По 3 Цикл
			ТабДокумент.Присоединить(ОбластьМакета);
		КонецЦикла;
	КонецЦикла;
	// выводим предварительно подготовленный Подвал документа.
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	Возврат ТабДокумент; 
	
КонецФункции

Функция КомандировкаДанные(Командировка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Командировка.Номер КАК Номер,
		|	Командировка.Дата КАК Дата,
		|	Командировка.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
		|	Командировка.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	Командировка.Сотрудник.Ссылка КАК СотрудникСсылка,
		|	Командировка.ДатаНачала КАК ДатаНачала,
		|	Командировка.ДатаОкончания КАК ДатаОкончания,
		|	Командировка.Цель КАК Цель,
		|	Командировка.ОрганизацияНазначения КАК ОрганизацияНазначения,
		|	Командировка.МестоНазначения КАК МестоНазначения,
		|	Командировка.Основание КАК Основание,
		|	Командировка.Руководитель.ФИО КАК РуководительФИО,
		|	Командировка.ДолжностьРуководителя.Ссылка КАК ДолжностьРуководителяСсылка,
		|	Командировка.КомандировкаЗаСчетСредств КАК КомандировкаКомандировкаЗаСчетСредств,
		|	Командировка.ФизическоеЛицо.Пол КАК ФизическоеЛицоПол
		|ИЗ
		|	Документ.Командировка КАК Командировка
		|ГДЕ
		|	Командировка.Ссылка = &Командировка";
	
	Запрос.УстановитьПараметр("Командировка", Командировка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

Функция КомандировкаСписком(КомандировкиСотрудников)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомандировкиСотрудниковСотрудники.ДатаНачала КАК ДатаНачала,
		|	КомандировкиСотрудниковСотрудники.ДатаОкончания КАК ДатаОкончания,
		|	КомандировкиСотрудниковСотрудники.МестоНазначения КАК МестоНазначения,
		|	КомандировкиСотрудниковСотрудники.ОрганизацияНазначения КАК ОрганизацияНазначения,
		|	КомандировкиСотрудниковСотрудники.Цель КАК Цель,
		|	КомандировкиСотрудниковСотрудники.Сотрудник.Ссылка КАК СотрудникСсылка,
		|	КомандировкиСотрудниковСотрудники.Ссылка КАК Ссылка,
		|	КомандировкиСотрудниковСотрудники.Командировка.КомандировкаЗаСчетСредств КАК КомандировкаКомандировкаЗаСчетСредств,
		|	КомандировкиСотрудниковСотрудники.ФизическоеЛицо.Пол КАК ФизическоеЛицоПол
		|ПОМЕСТИТЬ ВТкомандировка
		|ИЗ
		|	Документ.КомандировкиСотрудников.Сотрудники КАК КомандировкиСотрудниковСотрудники
		|ГДЕ
		|	КомандировкиСотрудниковСотрудники.Ссылка = &КомандировкиСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КомандировкиСотрудников.Номер КАК Номер,
		|	КомандировкиСотрудников.Дата КАК Дата,
		|	КомандировкиСотрудников.Основание КАК Основание,
		|	КомандировкиСотрудников.ДолжностьРуководителя.Ссылка КАК ДолжностьРуководителяСсылка,
		|	ВТкомандировка.ДатаНачала КАК ДатаНачала,
		|	ВТкомандировка.ДатаОкончания КАК ДатаОкончания,
		|	ВТкомандировка.МестоНазначения КАК МестоНазначения,
		|	ВТкомандировка.ОрганизацияНазначения КАК ОрганизацияНазначения,
		|	ВТкомандировка.Цель КАК Цель,
		|	ВТкомандировка.СотрудникСсылка КАК СотрудникСсылка,
		|	КомандировкиСотрудников.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
		|	КомандировкиСотрудников.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
		|	КомандировкиСотрудников.Руководитель.ФИО КАК РуководительФИО,
		|	ВТкомандировка.КомандировкаКомандировкаЗаСчетСредств КАК КомандировкаКомандировкаЗаСчетСредств,
		|	ВТкомандировка.ФизическоеЛицоПол КАК ФизическоеЛицоПол
		|ИЗ
		|	Документ.КомандировкиСотрудников КАК КомандировкиСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТкомандировка КАК ВТкомандировка
		|		ПО (ВТкомандировка.Ссылка = КомандировкиСотрудников.Ссылка)
		|ГДЕ
		|	КомандировкиСотрудников.Ссылка = &КомандировкиСотрудников";
	
	Запрос.УстановитьПараметр("КомандировкиСотрудников", КомандировкиСотрудников);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Возврат ВыборкаДетальныеЗаписи;

КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Граница ячеек - обводка линиями вокруг ячейки
//значение границы может меняться только при определение другого типа линии. при работе в цикле нужно учитывать что необходимо ставить СплошнаяЛинияНет
//Для коректной работы обязательно необходимо переименовывать ячейку.Вместо номена на макете ставить имя

ЛинияСплошная = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
ЛинияНетЛинии = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);

ОбластьМакета.Область("Контрагент").ГраницаСверху 				= ЛинияСплошная;//Контрагент имя ячейки 
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Проверка вместится ли страница
//
МассивОбластейДляПроверкиВывода = новый Массив;
МассивОбластейДляПроверкиВывода(ОбластьШапка);//Сначала проверяем вместится ли шапка с таблицей
МассивОбластейДляПроверкиВывода(ОбластьМакета);

Пока Выборка.Следующий Цикл

ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, СтруктураИтогиДебиторКредитор);

МассивОбластейДляПроверкиВывода.Очистить();//очистили предыдущие данные для проверти
МассивОбластейДляПроверкиВывода.Добавить(ОбластьМакета);//Теперь проверяем только вместится ли таблица


//Берет таб. Док и проверяет вместится ли новый элемент на страницу
Если НЕ ДокументРезультат.ПроверитьВывод(МассивОбластейДляПроверкиВывода) Тогда
	        ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		ДокументРезультат.Вывести(ОбластьМакета);
	Иначе
		ДокументРезультат.Вывести(ОбластьМакета);
	КонецЕсли;
КонецЦикла



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Склонение

	РезультатСклонения = "";
		Если ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ВыборкаРаботники.Сотрудник), 4, РезультатСклонения, ВыборкаРаботники.Пол) Тогда
			ОбластьМакета.Параметры.РаботникДательныйПадеж = РезультатСклонения;
		КонецЕсли;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                 //Создание Документа и Печатной Формы с кномкой Печать
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//В документе есть кнопка Печать, при нажатии происходит переход в печатку, а в печатке есть кнопка Печать
//https://disk.yandex.ru/d/G4be_mJDNyEF_A

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                 Внешная печатная форма вызывающия внешний отчет
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
https://infostart.ru/1c/articles/1388829/
