//ОБЯЗАТЕЛЬНО АвтоматическоеСохранениеПользовательскихНастроек = Ложь
//Иначе будут сохраняться кешэ пользовательских настроек УО
// Справочник ~сэ_ПланМероприятий Форма ~сэ_.....
//Сделать проверку на количество отборов к ДинСписку 
&НаСервере
Процедура сэ_УсловноеОформлениеСтатусЦветФона()
	//Цвета
	СтатусВыполненоЦвет = Новый Цвет(215, 240, 199);
	СтатусИзмененоЦвет = Новый Цвет(250, 250, 217);
	СтатусВРаботеЦвет = Новый Цвет(210, 232, 245);
	СтатусОтмененоИлиПриостановленоЦвет = Новый Цвет(255, 238, 238);
	СтатусУтвержденоГендиректоромСобственниковТехСоветомЦвет = Новый Цвет(220, 220, 220); 
	
	
	
	ДС_Мероприятия.АвтоматическоеСохранениеПользовательскихНастроек = Ложь;
	
	УО = ДС_Мероприятия.КомпоновщикНастроек.Настройки.УсловноеОформление.Элементы;
	УО.Очистить();
	
	
	//Статус Выполнено
	ЭлементУО = УО.Добавить();
	ЭлементУО.Использование = Истина;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", СтатусВыполненоЦвет);
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");//Это название переменной в динамическом списке. На форме название ДС_МероприятияСтатус
	ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Перечисления.сэ_СтатусыПлановыхМероприятий.Выполнено;

	ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Статус");//Это название переменной в динамическом списке. На форме название ДС_МероприятияСтатус

	
	//Статус Изменено
	ЭлементУО = УО.Добавить();
	ЭлементУО.Использование = Истина;

	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", СтатусИзмененоЦвет);
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
	ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Перечисления.сэ_СтатусыПлановыхМероприятий.Изменено;

	ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Статус");
	
	
	//Статус В Работе
	ЭлементУО = УО.Добавить();
	ЭлементУО.Использование = Истина;

	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", СтатусВРаботеЦвет);
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
	ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Перечисления.сэ_СтатусыПлановыхМероприятий.ВРаботе;

	ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;

	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Статус");
	

	
	
	//Статус Отменено или Приостановлено
	ЭлементУО = УО.Добавить();
	ЭлементУО.Использование = Истина;

	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", СтатусОтмененоИлиПриостановленоЦвет);
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ЭлементУсловия.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	
	СтатусОтменено = ЭлементУсловия.Элементы.Вставить(0,Тип("ЭлементОтбораКомпоновкиДанных"));
	СтатусПриостановлено = ЭлементУсловия.Элементы.Вставить(1,Тип("ЭлементОтбораКомпоновкиДанных"));
	
	
	
	
	СтатусОтменено.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
	СтатусОтменено.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	СтатусОтменено.ПравоеЗначение = Перечисления.сэ_СтатусыПлановыхМероприятий.Отменено;  
	
	СтатусПриостановлено.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
	СтатусПриостановлено.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	СтатусПриостановлено.ПравоеЗначение = Перечисления.сэ_СтатусыПлановыхМероприятий.Приостановлено;
	
	
	ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;

	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Статус");
	
	
	
	
	//Статус В Утверждено ген директором или собственником или тех советом
	ЭлементУО = УО.Добавить();
	ЭлементУО.Использование = Истина;

	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", СтатусУтвержденоГендиректоромСобственниковТехСоветомЦвет);
	ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ЭлементУсловия.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	СтатусУтвержденоГенДиректором = ЭлементУсловия.Элементы.Вставить(0,Тип("ЭлементОтбораКомпоновкиДанных"));
	СтатусУтвержденоСобственником = ЭлементУсловия.Элементы.Вставить(1,Тип("ЭлементОтбораКомпоновкиДанных"));
	СтатусУтвержденоТехническимСоветом = ЭлементУсловия.Элементы.Вставить(2,Тип("ЭлементОтбораКомпоновкиДанных"));
	
	
	
	СтатусУтвержденоГенДиректором.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
	СтатусУтвержденоГенДиректором.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	СтатусУтвержденоГенДиректором.ПравоеЗначение = Перечисления.сэ_СтатусыПлановыхМероприятий.УтвержденоГенДиректором;
	
	СтатусУтвержденоСобственником.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
	СтатусУтвержденоСобственником.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	СтатусУтвержденоСобственником.ПравоеЗначение = Перечисления.сэ_СтатусыПлановыхМероприятий.УтвержденоСобственником;
	
	СтатусУтвержденоТехническимСоветом.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Статус");
	СтатусУтвержденоТехническимСоветом.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	СтатусУтвержденоТехническимСоветом.ПравоеЗначение = Перечисления.сэ_СтатусыПлановыхМероприятий.УтвержденоТехническимСоветом;

	ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
	ОформляемоеПоле.Использование = Истина;
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("Статус");

	
	
		
	
	ДС_Мероприятия.КомпоновщикНастроек.ЗагрузитьНастройки(ДС_Мероприятия.КомпоновщикНастроек.Настройки);
	

КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Чтение дин. списка из УФ формы

&НаСервере
Функция ЧтениеДинамическогоСписка();

   // Получаем СКД с текстом запроса
   СКД_запрос  = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
   
   // Получаем настройки пользователя (отборы, сортировки и т.п.)
   Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
   
   // Получаем макет с учетом настроек
   КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
   МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД_запрос ,Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
   
   // Выполняем инициализацию динамического списка
   ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
   ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
   ПроцессорВыводаРезультата  = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
   
   // Выводим реультат
   Результат = ПроцессорВыводаРезультата.Вывести(ПроцессорКомпоновки);
   
   Если Результат.Количество()>0 Тогда
	   Возврат Результат[0].Идентификатор;              
   Иначе
	   Возврат Неопределено; 
   КонецЕсли;
	
КонецФункции
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
